plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

neoForge {
    version = neoforge_version

    accessTransformers.from(project(":common").file('src/main/resources/META-INF/accesstransformer.cfg'))

    parchment {
        minecraftVersion = parchment_minecraft_version
        mappingsVersion = parchment_version
    }

    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric

            def dir = project.getLayout().getProjectDirectory().dir('runs/' + it.name)
            if (!dir.asFile.exists()) {
                dir.asFile.mkdir()
            }
            getGameDirectory().convention(dir)
        }

        client {
            client()
        }

        data {
            data()
        }

        server {
            server()
        }
    }

    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    runtimeOnly("curse.maven:catalogue-459701:${neoforge_catalogue_version}")
//    runtimeOnly("curse.maven:configured-457570:${neoforge_configured_version}")
    runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")
//    runtimeOnly("me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}")

    implementation("curse.maven:cake-chomps-307943:${neoforge_cake_chomps_version}")
    implementation("me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}")
    implementation("dev.architectury:architectury-neoforge:${architectury_version}")
    implementation("fuzs.forgeconfigapiport:forgeconfigapiport-neoforge:${config_port_version}")
    implementation("maven.modrinth:jade:${neoforge_jade_version}")
    compileOnly("maven.modrinth:moonlight:${neoforge_moonlight_version}")
    compileOnly("maven.modrinth:amendments:${neoforge_amendments_version}")
    implementation("mysticdrew:common-networking-neoforge:${networking_version}-${minecraft_version}")

    compileOnly(testCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"))
    compileOnly(testCompileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"))
    compileOnly(testCompileOnly("me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"))
}

processResources {
    exclude("${mod_id}.accesswidener")
}