subprojects {
    apply plugin: 'java'
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)

    jar {
        manifest {
            attributes([
                    'Specification-Title'     : mod_name,
                    'Specification-Vendor'    : mod_author,
                    'Specification-Version'   : version,
                    'Implementation-Title'    : mod_name,
                    'Implementation-Version'  : version,
                    'Implementation-Vendor'   : mod_author,
                    'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Timestamp'               : System.currentTimeMillis(),
                    'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (JEI / CraftTweaker / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            url = "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven {
            name = "ModMaven"
            url = "https://modmaven.dev"
        }

        maven {
            url = "https://maven.shedaniel.me/"
        }

        maven {
            url = "https://maven.architectury.dev/"
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }

    processResources {
        exclude('.cache/')
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}
